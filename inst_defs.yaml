- mnemonic: "nop"
  type: "F"
  flag_bit_11: 0
  args: []

- mnemonic: "scf"
  type: "F"
  flag_bit_11: 1
  args: ["Flag", "inv", "cond"] 

- mnemonic: "ld"
  type: "I"
  imm_type: 0
  args: ["Reg", "Imm", "cond"]

- mnemonic: "st"
  type: "I"
  imm_type: 1
  args: ["Reg", "Imm", "cond"]

- mnemonic: "ldi"
  type: "I"
  imm_type: 2
  args: ["Reg", "Imm", "cond"]

- mnemonic: "goto"
  type: "J"
  args: ["Reg", "Reg", "cond"]

- mnemonic: "slr"
  type: "R"
  func: 0
  args: ["Reg", "Reg", "cond"]

- mnemonic: "sll"
  type: "R"
  func: 1
  args: ["Reg", "Reg", "cond"]

- mnemonic: "inc"
  type: "R"
  func: 4
  args: ["Reg", "Reg", "cond"]

- mnemonic: "dec"
  type: "R"
  func: 5
  args: ["Reg", "Reg", "cond"]

- mnemonic: "add"
  type: "R"
  func: 6
  args: ["Reg", "Reg", "cond"]

- mnemonic: "not"
  type: "R"
  func: 8
  args: ["Reg", "Reg", "cond"]

- mnemonic: "and"
  type: "R"
  func: 9
  args: ["Reg", "Reg", "cond"]

- mnemonic: "or"
  type: "R"
  func: 10
  args: ["Reg", "Reg", "cond"]

- mnemonic: "xor"
  type: "R"
  func: 11
  args: ["Reg", "Reg", "cond"]

- mnemonic: "mov"
  type: "R"
  func: 12
  args: ["Reg", "Reg", "cond"]